!function(){"use strict";class e{constructor(e,t,r){this._cardTitle=e.name,this._cardLink=e.link,this._cardSelector=t,this._handleImageClick=r}_setEventListeners(){this._deleteButton=this._element.querySelector(".locations__card-delete"),this._deleteButton.addEventListener("click",this._deleteCard),this._likeButton=this._element.querySelector(".locations__card-like"),this._likeButton.addEventListener("click",this._likeCard),this._cardImage=this._element.querySelector(".locations__card-image"),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({title:this._cardTitle,image:this._cardLink})}))}_deleteCard=()=>{this._element.remove(),this._element=null};_likeCard=()=>{this._likeButton.classList.toggle("locations__card-like_active")};_getCardData(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".locations__card-wrapper")}generateCard(){return this._element=this._getCardData(),this._setEventListeners(),this._cardText=this._element.querySelector(".locations__card-text"),this._cardText.textContent=this._cardTitle,this._cardImage.src=this._cardLink,this._cardImage.alt=`Photo of ${this._cardTitle}`,this._element}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const r={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"};class o{constructor(e){this._popupSelector=document.querySelector(e)}open(){this._popupSelector.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupSelector.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupSelector.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends o{constructor(e,t){super(e),this._handleFormSubmit=t,this._formSelector=this._popupSelector.querySelector(".modal__container"),this._inputList=this._formSelector.querySelectorAll(".modal__input")}_getInputValues(){return this.inputValues={},this._inputList.forEach((e=>{this.inputValues[e.name]=e.value})),this.inputValues}setEventListeners(){this._formSelector.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._formSelector.reset()})),super.setEventListeners()}}const i=document.querySelector("#edit-modal"),n=document.forms["profile-form"],a=document.querySelector(".profile__edit-button"),c=(i.querySelector(".modal__close"),document.querySelector(".profile__name"),document.querySelector(".profile__description"),document.querySelector(".modal__input-name")),l=document.querySelector(".modal__input-description"),d=(n.querySelector(".modal__save"),document.querySelector(".profile__add-button")),u=document.querySelector("#add-card-modal"),m=document.forms["card-form"],_=(u.querySelector(".modal__close"),u.querySelector(".modal__input-title"),u.querySelector(".modal__input-link"),m.querySelector(".modal__save"),document.querySelector("#locations-card"),document.querySelector(".locations__cards"),document.querySelector("#preview-image-modal")),h=(document.querySelector(".modal__image"),_.querySelector(".modal__close"),_.querySelector(".modal__image-text"),Array.from(document.querySelectorAll(".modal")),[u,i]),p=Array.from(document.querySelectorAll(".modal__container")),f={},S={},v=new class extends o{constructor(e){super(e),this._popupImage=this._popupSelector.querySelector(".modal__image"),this._popupTitle=this._popupSelector.querySelector(".modal__image-text")}open(e){let{title:t,image:r}=e;this._popupImage.src=r,this._popupImage.alt=t,this._popupTitle.textContent=t,super.open()}}("#preview-image-modal");v.setEventListeners();const y=e=>{let{title:t,image:r}=e;v.open({title:t,image:r})};a.addEventListener("click",(()=>{f["profile-form"].resetValidation(),S["edit-modal"].open(),function(){const e=b.getUserInfo();c.value=e.name,l.value=e.job}()}));const g=t=>new e(t,"#locations-card",y).generateCard(),E=new class{constructor(e,t){let{items:r,renderer:o}=e;this._initialArray=r,this._renderer=o,this._containerSelector=t,this._container=document.querySelector(this._containerSelector)}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=g(e);E.addItem(t)}},".locations__cards");E.renderItems(),d.addEventListener("click",(()=>{f["card-form"].resetValidation(),S["add-card-modal"].open()})),p.forEach((e=>{const o=new t(r,e);o.enableValidation(),f[e.name]=o})),h.forEach((e=>{const t=new s(`#${e.id}`,(t=>{"add-card-modal"===e.id?function(e){const t=e["image-title"],r=e["image-link"];E.addItem(g({name:t,link:r})),S["add-card-modal"].close()}(t):function(e){b.setUserInfo(e.Name,e["About me"]),S["edit-modal"].close()}(t)}));t.setEventListeners(),S[e.id]=t}));const b=new class{constructor(e){let{profileName:t,profileJob:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}}({profileName:".profile__name",profileJob:".profile__description"}),C=new class{constructor(e){this._baseURL=e.baseURL,this._headers=e._headers}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addCard(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:POST,headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d","Content-Type":"application/json"},body:JSON.stringify()})}deleteCard(){return fetch("https://around-api.en.tripleten-services.com/v1/cards/cardId",{method:DELETE,headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d"}})}loadUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d"}})}editUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d","Content-Type":"application/json"},body:JSON.stringify({name:"Marie Sk≈Çodowska Curie",about:"Physicist and Chemist"})})}updateProfilePicture(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d","Content-Type":"application/json"},body:JSON.stringify({avatar:www.hotdog.com})})}toggleCardLike(){return fetch("https://around-api.en.tripleten-services.com/v1/cards/cardId/likes",{method:PUT,headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d"}})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d4cadbf6-4b07-471d-8c88-393f36774c1d","Content-Type":"application/json"}});console.log(C.editUserInfo())}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,